[
  {
    "question_id": 1471,
    "db_id": "debit_card_specializing",
    "question": "What is the ratio of customers who pay in EUR against customers who pay in CZK?",
    "true_sql": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) FROM customers",
    "text_2_sql": "SELECT (COUNT(CASE WHEN currency = 'EUR' THEN 1 ELSE NULL END) / COUNT(DISTINCT customerid))::REAL AS ratio_EUR, (COUNT(CASE WHEN currency = 'CZK' THEN 1 ELSE NULL END) / COUNT(DISTINCT customerid))::REAL AS ratio_CZK FROM customers;",
    "prompt": "CREATE TABLE customers ( `customerid` BIGINT NOT NULL, `segment` TEXT NULL, `currency` TEXT NULL ); CREATE TABLE gasstations ( `gasstationid` BIGINT NOT NULL, `chainid` BIGINT NULL, `country` TEXT NULL, `segment` TEXT NULL ); CREATE TABLE products ( `productid` BIGINT NOT NULL, `description` TEXT NULL ); CREATE TABLE transactions_1k ( `price` REAL NULL, `date` DATE NULL, `transactionid` BIGINT NOT NULL, `customerid` BIGINT NULL, `cardid` BIGINT NULL, `gasstationid` BIGINT NULL, `productid` BIGINT NULL, `amount` BIGINT NULL, `time` TEXT NULL ); CREATE TABLE yearmonth ( `customerid` BIGINT NULL, `consumption` REAL NULL, `date` TEXT NULL ); -- Using valid PostgreSQL, answer the following questions for the tables provided above. -- What is the ratio of customers who pay in EUR against customers who pay in CZK? Generate the PostgreSQL for the above question after thinking step by step: In your response, you do not need to mention your intermediate steps. Do not include any comments in your response. Do not need to start with the symbol ``` You only need to return the result PostgreSQL SQL code start from SELECT",
    "response_metadata": {
      "generation": "SELECT (COUNT(CASE WHEN currency = 'EUR' THEN 1 ELSE NULL END) / COUNT(DISTINCT customerid))::REAL AS ratio_EUR, (COUNT(CASE WHEN currency = 'CZK' THEN 1 ELSE NULL END) / COUNT(DISTINCT customerid))::REAL AS ratio_CZK FROM customers;",
      "prompt_token_count": 312,
      "generation_token_count": 78,
      "stop_reason": "stop"
    },
    "difficulty": "simple"
  },
  {
    "question_id": 1472,
    "db_id": "debit_card_specializing",
    "question": "In 2012, who had the least consumption in LAM?",
    "true_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC NULLS FIRST LIMIT 1",
    "text_2_sql": "SELECT y.customerid, y.consumption FROM yearmonth y WHERE y.date LIKE '2012%' AND y.consumption = ( SELECT MIN(consumption) FROM yearmonth WHERE date LIKE '2012%' ) AND y.date LIKE 'LAM%';",
    "prompt": "CREATE TABLE customers ( `customerid` BIGINT NOT NULL, `segment` TEXT NULL, `currency` TEXT NULL ); CREATE TABLE gasstations ( `gasstationid` BIGINT NOT NULL, `chainid` BIGINT NULL, `country` TEXT NULL, `segment` TEXT NULL ); CREATE TABLE products ( `productid` BIGINT NOT NULL, `description` TEXT NULL ); CREATE TABLE transactions_1k ( `price` REAL NULL, `date` DATE NULL, `transactionid` BIGINT NOT NULL, `customerid` BIGINT NULL, `cardid` BIGINT NULL, `gasstationid` BIGINT NULL, `productid` BIGINT NULL, `amount` BIGINT NULL, `time` TEXT NULL ); CREATE TABLE yearmonth ( `customerid` BIGINT NULL, `consumption` REAL NULL, `date` TEXT NULL ); -- Using valid PostgreSQL, answer the following questions for the tables provided above. -- In 2012, who had the least consumption in LAM? Generate the PostgreSQL for the above question after thinking step by step: In your response, you do not need to mention your intermediate steps. Do not include any comments in your response. Do not need to start with the symbol ``` You only need to return the result PostgreSQL SQL code start from SELECT",
    "response_metadata": {
      "generation": "SELECT y.customerid, y.consumption FROM yearmonth y WHERE y.date LIKE '2012%' AND y.consumption = ( SELECT MIN(consumption) FROM yearmonth WHERE date LIKE '2012%' ) AND y.date LIKE 'LAM%';",
      "prompt_token_count": 308,
      "generation_token_count": 62,
      "stop_reason": "stop"
    },
    "difficulty": "moderate"
  },
  {
    "question_id": 1473,
    "db_id": "debit_card_specializing",
    "question": "What was the average monthly consumption of customers in SME for the year 2013?",
    "true_sql": "SELECT AVG(T2.Consumption) / NULLIF(12, 0) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME'",
    "text_2_sql": "SELECT AVG(consumption) FROM yearmonth WHERE date LIKE '2013%' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'SME');",
    "prompt": "CREATE TABLE customers ( `customerid` BIGINT NOT NULL, `segment` TEXT NULL, `currency` TEXT NULL ); CREATE TABLE gasstations ( `gasstationid` BIGINT NOT NULL, `chainid` BIGINT NULL, `country` TEXT NULL, `segment` TEXT NULL ); CREATE TABLE products ( `productid` BIGINT NOT NULL, `description` TEXT NULL ); CREATE TABLE transactions_1k ( `price` REAL NULL, `date` DATE NULL, `transactionid` BIGINT NOT NULL, `customerid` BIGINT NULL, `cardid` BIGINT NULL, `gasstationid` BIGINT NULL, `productid` BIGINT NULL, `amount` BIGINT NULL, `time` TEXT NULL ); CREATE TABLE yearmonth ( `customerid` BIGINT NULL, `consumption` REAL NULL, `date` TEXT NULL ); -- Using valid PostgreSQL, answer the following questions for the tables provided above. -- What was the average monthly consumption of customers in SME for the year 2013? Generate the PostgreSQL for the above question after thinking step by step: In your response, you do not need to mention your intermediate steps. Do not include any comments in your response. Do not need to start with the symbol ``` You only need to return the result PostgreSQL SQL code start from SELECT",
    "response_metadata": {
      "generation": "SELECT AVG(consumption) FROM yearmonth WHERE date LIKE '2013%' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'SME');",
      "prompt_token_count": 311,
      "generation_token_count": 43,
      "stop_reason": "stop"
    },
    "difficulty": "moderate"
  },
  {
    "question_id": 1476,
    "db_id": "debit_card_specializing",
    "question": "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "true_sql": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN CAST(T2.Consumption AS float) ELSE 0 END) -SUM(CASE WHEN T1.Currency = 'EUR' THEN CAST(T2.Consumption AS float) ELSE 0 END) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE substring(T2.Date, 1, 4) = '2012'",
    "text_2_sql": "SELECT currency, AVG(consumption) FROM ( SELECT c.currency, ym.consumption FROM customers c JOIN yearmonth ym ON c.customerid = ym.customerid WHERE ym.date LIKE '%2012%' ) AS subquery GROUP BY currency;",
    "prompt": "CREATE TABLE customers ( `customerid` BIGINT NOT NULL, `segment` TEXT NULL, `currency` TEXT NULL ); CREATE TABLE gasstations ( `gasstationid` BIGINT NOT NULL, `chainid` BIGINT NULL, `country` TEXT NULL, `segment` TEXT NULL ); CREATE TABLE products ( `productid` BIGINT NOT NULL, `description` TEXT NULL ); CREATE TABLE transactions_1k ( `price` REAL NULL, `date` DATE NULL, `transactionid` BIGINT NOT NULL, `customerid` BIGINT NULL, `cardid` BIGINT NULL, `gasstationid` BIGINT NULL, `productid` BIGINT NULL, `amount` BIGINT NULL, `time` TEXT NULL ); CREATE TABLE yearmonth ( `customerid` BIGINT NULL, `consumption` REAL NULL, `date` TEXT NULL ); -- Using valid PostgreSQL, answer the following questions for the tables provided above. -- What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012? Generate the PostgreSQL for the above question after thinking step by step: In your response, you do not need to mention your intermediate steps. Do not include any comments in your response. Do not need to start with the symbol ``` You only need to return the result PostgreSQL SQL code start from SELECT",
    "response_metadata": {
      "generation": "SELECT currency, AVG(consumption) FROM ( SELECT c.currency, ym.consumption FROM customers c JOIN yearmonth ym ON c.customerid = ym.customerid WHERE ym.date LIKE '%2012%' ) AS subquery GROUP BY currency;",
      "prompt_token_count": 315,
      "generation_token_count": 84,
      "stop_reason": "stop"
    },
    "difficulty": "challenging"
  },
  {
    "question_id": 1479,
    "db_id": "debit_card_specializing",
    "question": "Which year recorded the most consumption of gas paid in CZK?",
    "true_sql": "SELECT SUBSTR(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' GROUP BY SUBSTR(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC NULLS LAST LIMIT 1",
    "text_2_sql": "SELECT EXTRACT(YEAR FROM ym.date) AS year, SUM(y.consumption) AS total_consumption FROM yearmonth y JOIN customers c ON y.customerid = c.customerid WHERE c.currency = 'CZK' GROUP BY year ORDER BY total_consumption DESC LIMIT 1;",
    "prompt": "CREATE TABLE customers ( `customerid` BIGINT NOT NULL, `segment` TEXT NULL, `currency` TEXT NULL ); CREATE TABLE gasstations ( `gasstationid` BIGINT NOT NULL, `chainid` BIGINT NULL, `country` TEXT NULL, `segment` TEXT NULL ); CREATE TABLE products ( `productid` BIGINT NOT NULL, `description` TEXT NULL ); CREATE TABLE transactions_1k ( `price` REAL NULL, `date` DATE NULL, `transactionid` BIGINT NOT NULL, `customerid` BIGINT NULL, `cardid` BIGINT NULL, `gasstationid` BIGINT NULL, `productid` BIGINT NULL, `amount` BIGINT NULL, `time` TEXT NULL ); CREATE TABLE yearmonth ( `customerid` BIGINT NULL, `consumption` REAL NULL, `date` TEXT NULL ); -- Using valid PostgreSQL, answer the following questions for the tables provided above. -- Which year recorded the most consumption of gas paid in CZK? Generate the PostgreSQL for the above question after thinking step by step: In your response, you do not need to mention your intermediate steps. Do not include any comments in your response. Do not need to start with the symbol ``` You only need to return the result PostgreSQL SQL code start from SELECT",
    "response_metadata": {
      "generation": "SELECT EXTRACT(YEAR FROM ym.date) AS year, SUM(y.consumption) AS total_consumption FROM yearmonth y JOIN customers c ON y.customerid = c.customerid WHERE c.currency = 'CZK' GROUP BY year ORDER BY total_consumption DESC LIMIT 1;",
      "prompt_token_count": 307,
      "generation_token_count": 67,
      "stop_reason": "stop"
    },
    "difficulty": "moderate"
  },
  {
    "question_id": 1480,
    "db_id": "debit_card_specializing",
    "question": "What was the gas consumption peak month for SME customers in 2013?",
    "true_sql": "SELECT SUBSTR(T2.Date, 5, 2) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME' GROUP BY SUBSTR(T2.Date, 5, 2) ORDER BY SUM(T2.Consumption) DESC NULLS LAST LIMIT 1",
    "text_2_sql": "SELECT ym.date, SUM(t.amount) as total_consumption FROM yearmonth ym JOIN customers c ON ym.customerid = c.customerid JOIN transactions_1k t ON ym.customerid = t.customerid WHERE c.segment = 'SME' AND ym.date LIKE '%2013%' GROUP BY ym.date ORDER BY total_consumption DESC LIMIT 1;",
    "prompt": "CREATE TABLE customers ( `customerid` BIGINT NOT NULL, `segment` TEXT NULL, `currency` TEXT NULL ); CREATE TABLE gasstations ( `gasstationid` BIGINT NOT NULL, `chainid` BIGINT NULL, `country` TEXT NULL, `segment` TEXT NULL ); CREATE TABLE products ( `productid` BIGINT NOT NULL, `description` TEXT NULL ); CREATE TABLE transactions_1k ( `price` REAL NULL, `date` DATE NULL, `transactionid` BIGINT NOT NULL, `customerid` BIGINT NULL, `cardid` BIGINT NULL, `gasstationid` BIGINT NULL, `productid` BIGINT NULL, `amount` BIGINT NULL, `time` TEXT NULL ); CREATE TABLE yearmonth ( `customerid` BIGINT NULL, `consumption` REAL NULL, `date` TEXT NULL ); -- Using valid PostgreSQL, answer the following questions for the tables provided above. -- What was the gas consumption peak month for SME customers in 2013? Generate the PostgreSQL for the above question after thinking step by step: In your response, you do not need to mention your intermediate steps. Do not include any comments in your response. Do not need to start with the symbol ``` You only need to return the result PostgreSQL SQL code start from SELECT",
    "response_metadata": {
      "generation": "SELECT ym.date, SUM(t.amount) as total_consumption FROM yearmonth ym JOIN customers c ON ym.customerid = c.customerid JOIN transactions_1k t ON ym.customerid = t.customerid WHERE c.segment = 'SME' AND ym.date LIKE '%2013%' GROUP BY ym.date ORDER BY total_consumption DESC LIMIT 1;",
      "prompt_token_count": 309,
      "generation_token_count": 85,
      "stop_reason": "stop"
    },
    "difficulty": "moderate"
  },
  {
    "question_id": 1481,
    "db_id": "debit_card_specializing",
    "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "true_sql": "SELECT CAST(SUM(CASE WHEN T1.Segment = 'SME' THEN T2.Consumption ELSE 0 END) AS REAL) / NULLIF(COUNT(T1.CustomerID), 0) - CAST(SUM(CASE WHEN T1.Segment = 'LAM' THEN T2.Consumption ELSE 0 END) AS REAL) / NULLIF(COUNT(T1.CustomerID), 0), CAST(SUM(CASE WHEN T1.Segment = 'LAM' THEN T2.Consumption ELSE 0 END) AS REAL) / NULLIF(COUNT(T1.CustomerID), 0) - CAST(SUM(CASE WHEN T1.Segment = 'KAM' THEN T2.Consumption ELSE 0 END) AS REAL) / NULLIF(COUNT(T1.CustomerID), 0), CAST(SUM(CASE WHEN T1.Segment = 'KAM' THEN T2.Consumption ELSE 0 END) AS REAL) / NULLIF(COUNT(T1.CustomerID), 0) - CAST(SUM(CASE WHEN T1.Segment = 'SME' THEN T2.Consumption ELSE 0 END) AS REAL) / NULLIF(COUNT(T1.CustomerID), 0) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = (SELECT MIN(Consumption) FROM yearmonth) AND T2.Date::text BETWEEN '201301' AND '201312'",
    "text_2_sql": "SELECT 'SME vs LAM' AS category, AVG(SME_consumption) - AVG(LAM_consumption) AS difference FROM ( SELECT AVG(consumption) AS SME_consumption FROM yearmonth WHERE date LIKE '2013%' AND customerid IN ( SELECT customerid FROM customers WHERE currency = 'CZK'",
    "prompt": "CREATE TABLE customers ( `customerid` BIGINT NOT NULL, `segment` TEXT NULL, `currency` TEXT NULL ); CREATE TABLE gasstations ( `gasstationid` BIGINT NOT NULL, `chainid` BIGINT NULL, `country` TEXT NULL, `segment` TEXT NULL ); CREATE TABLE products ( `productid` BIGINT NOT NULL, `description` TEXT NULL ); CREATE TABLE transactions_1k ( `price` REAL NULL, `date` DATE NULL, `transactionid` BIGINT NOT NULL, `customerid` BIGINT NULL, `cardid` BIGINT NULL, `gasstationid` BIGINT NULL, `productid` BIGINT NULL, `amount` BIGINT NULL, `time` TEXT NULL ); CREATE TABLE yearmonth ( `customerid` BIGINT NULL, `consumption` REAL NULL, `date` TEXT NULL ); -- Using valid PostgreSQL, answer the following questions for the tables provided above. -- What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME? Generate the PostgreSQL for the above question after thinking step by step: In your response, you do not need to mention your intermediate steps. Do not include any comments in your response. Do not need to start with the symbol ``` You only need to return the result PostgreSQL SQL code start from SELECT",
    "response_metadata": {
      "generation": "SELECT 'SME vs LAM' AS category, AVG(SME_consumption) - AVG(LAM_consumption) AS difference FROM ( SELECT AVG(consumption) AS SME_consumption FROM yearmonth WHERE date LIKE '2013%' AND customerid IN ( SELECT customerid FROM customers WHERE currency = 'CZK'",
      "prompt_token_count": 338,
      "generation_token_count": 100,
      "stop_reason": "length"
    },
    "difficulty": "challenging"
  }
]